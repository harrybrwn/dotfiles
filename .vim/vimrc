"
" My .vimrc
"
" github: https://github.com/harrybrwn
"

if has("syntax")
    syntax on
endif

" Basic settings
filetype indent on
set nocompatible
set number   " 'set rnu' for relative line numbers
set ruler
set wrap      " wrap text that doesn't fit
set linebreak " wrap by word instead of char
" set term=screen-256color " for better color compatability with tmux
set spelllang=en_us
set number relativenumber

" Tab completion
set wildmenu      " just looks nice
set wildmode=longest:full,full

" Status Line
set laststatus=2  " always show the status line
set shortmess+=F  " remove filename in the command line bar

" Tab settings
set tabstop=4
set expandtab
set shiftwidth=4
set softtabstop=4
set smartindent

" Change the default location of .viminfo
set viminfo+=n~/.vim/viminfo

" Searching
set hlsearch
set incsearch

" PluginManagment
"
" :PluginList         - list all plugins
" :PluginUpdate       - update plugins
" :PluginInstall      - install plugins
" :PluginSearch foo   - search for 'foo'
" :PluginClean        - clean out unused plugins
"
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'altercation/vim-colors-solarized'
Plugin 'junegunn/goyo.vim'
Plugin 'reedes/vim-colors-pencil'
Plugin 'arcticicestudio/nord-vim'
Plugin 'dracula/vim', { 'name': 'dracula' }
call vundle#end()
filetype plugin indent on

" Colors
set t_Co=256
set background=dark
au ColorScheme * highlight Normal ctermbg=none
colo dracula
" hi LineNr ctermfg=245
hi CursorLineNR ctermfg=magenta
hi SpellBad cterm=underline ctermbg=none ctermfg=none

" Key Maps
let mapleader=","
let g:comment_char = ''
nmap <silent><Leader>/ :call Comment(g:comment_char)<CR>
nnoremap <Bar> $
nmap <C-i> i<Space><Esc>r
nmap <silent><Leader>g :let g:git_branch = GitBranch()<CR>

" Git Gutter
highlight SignColumn ctermbg=none
highlight GitGutterAdd    ctermfg=2 ctermbg=none
highlight GitGutterChange ctermfg=3 ctermbg=none
highlight GitGutterDelete ctermfg=1 ctermbg=none

" Git Branch update rules
" au BufNewFile,BufReadPost,BufWritePost,InsertEnter,InsertLeave,CursorHold * let g:git_branch = GitBranch()

source ~/.vim/status.vim

" My file-type settings
autocmd BufNewFile,BufReadPost *.clang-format set syntax=yaml
autocmd FileType make set noexpandtab
autocmd FileType make let g:comment_char = '@#'

" yaml
au! BufNewFile,BufReadPost *.{yaml,yml} set filetype=yaml
au FileType yaml setlocal ts=2 sts=2 sw=2 expandtab smartindent

" My Notes
au BufNewFile,BufReadPost *.note set filetype=note
au FileType note setlocal syn=yaml ts=2 sts=2 sw=2 smartindent expandtab

